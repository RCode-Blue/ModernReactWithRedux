import React, { Component } from 'react';
import { connect } from 'react-redux';
import { selectBook } from '../actions/index';
import { bindActionCreators } from 'redux';         // ensures actions flow through all reducers
                                                    // https://redux.js.org/api-reference/bindactioncreators

class BookList extends Component {
    renderList(){
        return this.props.books.map(book => {
            return(
                <li 
                    key={book.title} 
                    onClick={() => this.props.selectBook(book)}
                    className = "list-group-item">
                    {book.title}
                </li>
            );
        });
    }

    render() {
        return (
            <ul className = "list-group col-sm-4">
                {this.renderList()}
            </ul>
        );
    }
}

function mapStateToProps(state){
    // This function connects React and Redux
    // Whatever is returned will show up as props in BookList
    return{
        books: state.books
    };
}

// Anything returned from this function ends up as props in the BookList container
// Binds  dispatch and action creators
function mapDispatchToProps(dispatch) {
    // When selectBook is called, bindAction passes the result to all reducers
    // bindActionCreators: Turns an object whose values are action creators, into an object 
    //    with the same keys, but with every action creator wrapped into a dispatch call so 
    //    they may be invoked directly.
    // https://redux.js.org/api-reference/bindactioncreators
    return bindActionCreators({
        selectBook: selectBook
    }, dispatch);
}

// BookList needs to know about the selectBook dispatch method selectBook.
// Make it available as a prop.
// connects redux store to component
// https://www.sohamkamani.com/blog/2017/03/31/react-redux-connect-explained/
export default connect(mapStateToProps, mapDispatchToProps)(BookList);